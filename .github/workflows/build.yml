name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      OCAML_DEFAULT_VERSION: 4.06.1
      OCAML_2014_VERSION: 4.02.3
      OCAML_2018_VERSION: 4.06.1
      # https://tex.stackexchange.com/a/440271/2066
      # Try to create reproducible .pdfs
      SOURCE_DATE_EPOCH: 1
      SOURCE_DATE_EPOCH_TEX_PRIMITIVES: 1

    steps:
      - uses: actions/checkout@v2
      - name: submodules-init
        uses: snickerbockers/submodules-init@v4
      - name: Install Build Deps
        run: |
          sudo apt-get -o Acquire::Retries=30 update -q
          sudo apt-get -o Acquire::Retries=30 install -y --allow-unauthenticated \
            texlive \
            texlive-latex-extra \
            texlive-bibtex-extra \
            biber \
            #
      - name: Setup Python
        uses: actions/setup-python@v2
      - name: install Python deps
        run: |
          pip install Pygments
      - name: Use OCaml ${{ env.OCAML_DEFAULT_VERSION }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ env.OCAML_DEFAULT_VERSION }}
      - name: Install OCaml deps
        run: |
          opam update
          opam switch ${OCAML_2018_VERSION} || opam switch create ${OCAML_2018_VERSION}
          opam install -y "camlp5<8" ocamlfind hevea merlin oUnit dune num zarith # ocp-indent
          opam switch ${OCAML_2014_VERSION} || opam switch create ${OCAML_2014_VERSION}
          opam install -y "camlp5<8" ocamlfind hevea merlin oUnit dune num zarith # ocp-indent
      - name: Build 2014 Coq
        run: |
          opam switch ${OCAML_2014_VERSION}
          eval $(opam env)
          make coq-workshop-2014-html
      - name: Build 2018 Coq
        run: |
          opam switch ${OCAML_2018_VERSION}
          eval $(opam env)
          make coq-workshop-2018-html
      - name: make
        run: |
          opam switch ${OCAML_DEFAULT_VERSION}
          eval $(opam env)
          make
      - name: list
        run: |
          find .
          git status
      - run: make deploy-separate
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: build/
        if: always()

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build # The folder the action should deploy.
        if: ${{ github.ref == 'refs/heads/master' }}
