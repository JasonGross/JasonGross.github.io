We have attached the reviews to our submission to PLDI 2018.  In past
iterations of this paper, we focused on the generality and reusability
of our code, essentially selling it as a compiler-with-libraries that
can support push-button synthesis/compilation of efficient, secure
code for ECC primitives.  In light of reviews, we've retargeted our
paper. We believe that the reviewers asked the good question "given
the existence of other formal verifications of performance-competitive
ECC primitives, why should we care about what you did?"  Our paper is
now organized around a response to this question: we present our work
as an important case-study of a simple and clean methodology that we
developed, which we expect to be both educational and useful for
coding and proving future cryptographic primitives with much less
effort than the projects we've seen.
